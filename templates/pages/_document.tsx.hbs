import { ServerStyleSheet } from 'styled-components';
import React from 'react';
import Document, {
    Html,
    Head,
    Main,
    NextScript,
    DocumentContext,
} from 'next/document';
import { ComponentsEnhancer } from 'next/dist/next-server/lib/utils';

import { basicAuth, getEnvironmentSettings } from '@pb/services';
import { applicationVersion } from '@pb/configuration';

const appInsights = require('applicationinsights');

export default class MyDocument extends Document {
    static async getInitialProps(context: DocumentContext) {
        await basicAuth(context.req, context.res);

        const sheet = new ServerStyleSheet();
        const originalRenderPage = context.renderPage;

        try {
            context.renderPage = () =>
                originalRenderPage({
                    enhanceApp: App => properties =>
                        sheet.collectStyles(<App {...properties} />),
                } as ComponentsEnhancer);

            const initialProperties = await Document.getInitialProps(context);

            return {
                ...initialProperties,
                styles: (
                    <>
                        {initialProperties.styles}
                        {sheet.getStyleElement()}
                    </>
                ),
            };
        } finally {
            sheet.seal();
        }
    }

    render() {
        const {
            googleTagManagerApiKey,
            applicationInsightsKey,
        } = getEnvironmentSettings();

        appInsights
            .setup(applicationInsightsKey)
            .setAutoDependencyCorrelation()
            .start();
        appInsights.defaultClient.context.tags[
            appInsights.defaultClient.context.keys.cloudRole
        ] = '{{pascalCase applicationDirectory}}-Node';
        appInsights.defaultClient.context.tags[
            appInsights.defaultClient.context.keys.applicationVersion
        ] = applicationVersion;
        const client = appInsights.defaultClient;
        client.trackEvent({
            name: '{{pascalCase applicationDirectory}} Starting up',
        });

        return (
            <Html lang="en">
                <Head>
                    <link rel="shortcut icon" href="/favicon.ico" />
                    <meta name="author" content="Purplebricks" />
                    <meta name="robots" content="noindex" />
                    <link
                        rel="apple-touch-icon"
                        sizes="152x152"
                        href="https://pbonlineassets.azureedge.net/web-images/marketing-global/favicons/v3/apple-touch-icon-152x152.png"
                    />
                    <link
                        rel="icon"
                        type="image/png"
                        sizes="32x32"
                        href="https://pbonlineassets.azureedge.net/web-images/marketing-global/favicons/v3/favicon-32x32.png"
                    />
                    <link
                        rel="icon"
                        type="image/png"
                        sizes="16x16"
                        href="https://pbonlineassets.azureedge.net/web-images/marketing-global/favicons/v3/favicon-16x16.png"
                    />
                    <link
                        rel="mask-icon"
                        href="https://pbonlineassets.azureedge.net/web-images/marketing-global/favicons/v3/safari-pinned-tab.svg"
                        color="#550099"
                    />
                    <meta name="theme-color" content="#550099" />
                    <script
                        dangerouslySetInnerHTML={ {
                            __html: `
                            <!-- Google Tag Manager -->
                            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
                            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
                            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
                            })(window,document,'script','dataLayer','${googleTagManagerApiKey}');</script>
                            <!-- End Google Tag Manager -->
                        `,
                        }}
                    />
                    <link
                        href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Montserrat:wght@400;500;600;700&display=swap"
                        rel="stylesheet"
                    />
                    {this.props.styles}
                    <script
                        dangerouslySetInnerHTML={ {
                            __html: `<!-- Application version: ${applicationVersion} //-->`,
                        } }
                    />
                </Head>
                <body>
                    <noscript>
                        <iframe
                            id="googleTagManager"
                            title="Google tag manager"
                            src="https://www.googletagmanager.com/ns.html?id=GTM-TFWHR6"
                            height="0"
                            width="0"
                            style={ { display: 'none', visibility: 'hidden' } }
                        ></iframe>
                    </noscript>
                    <Main />
                    <NextScript />
                </body>
            </Html>
        );
    }
}
